/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>

&encoder_1_top_row {
	status = "okay";
};

#define PROC 0
#define AFFIN 1
#define RHINO 2

#define NONE 0

/ {	    
	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder_1_top_row>;
	};

	keymap {
		compatible = "zmk,keymap";
		
		proc_layer {
			bindings = <
						&kp LS(LG(Z)) 	&kp E 		&kp LALT
				&none	 	&kp LG(Z)  	&kp B 		&kp X
				&none 		&kp L 		&kp SPACE	&kp C
				&none 		&kp LG(BSPC) 	&kp S		&kp LG(U)
				&none          	&to 1		&kp V     	&kp LCMD
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		affin_layer {
			bindings = <
						&kp LS(LG(Z))  	&kp E 		&kp I
				&none	 	&kp LG(Z) 	&kp B 		&kp LG(SEMICOLON)
				&none 		&none 		&kp P		&kp LG(APOSTROPHE)
				&none 		&kp T		&kp A		&none
				&none          	&to 0 		&none		&kp LCMD
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		rhino_layer {
			bindings = <
						&kp LG(Y)	&kp LC(U)	&kp LC(0)	
				&none	 	&kp LG(Z)  	&kp LC(T)	&none	
				&none 		&kp LC(E)	&kp LC(M)	&kp LALT	
				&none 		&kp LC(J)	&kp LC(LA(E))	&kp LSHFT
				&none          	&kp ESC		&kp LC(P)     	&none
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
	};
};

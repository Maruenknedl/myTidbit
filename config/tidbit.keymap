/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>

&encoder_1_top_row {
	status = "okay";
};

#define AFFINITY 0
#define AFFIN 1
#define AFFINITYPC 2
#define AFFINPC 3
#define PROC 4
#define RHINO 5
#define RHIN 6
#define BLENDER 7
#define BLEN 8
#define SWITCH 9

#define NONE 0

/ {	    
	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder_1_top_row>;
	};

	keymap {
		compatible = "zmk,keymap";

		affinity_layer {
			bindings = <
						&kp LS(LG(Z))	&kp E 		&kp I
				&none	 	&kp LG(Z) 	&kp B 		&kp LG(SEMICOLON)
				&none 		&none 		&kp P		&kp LG(APOSTROPHE)
				&none 		&kp T		&kp A		&none
				&none          	&lt SWITCH ESC	&kp V    	&mo AFFIN
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		affin_layer {
			bindings = <
						&none	  	&none	 	&kp LG(J)
				&none	 	&none	 	&none		&kp LG(V)
				&none 		&none 		&none		&kp LG(C)
				&none 		&none		&none 		&kp LG(X)
				&none          	&kp ESC		&none     	&none	
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		affinitypc_layer {
			bindings = <
						&kp LS(LC(Y))  	&kp E 		&kp I
				&none	 	&kp LC(Y) 	&kp B 		&kp LG(SEMICOLON)
				&none 		&none 		&kp P		&kp LG(APOSTROPHE)
				&none 		&kp T		&kp A		&none
				&none          	&lt SWITCH ESC	&kp V    	&mo AFFINPC
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		affinpc_layer {
			bindings = <
						&none	  	&none	 	&kp LC(J)
				&none	 	&none	 	&none		&kp LC(V)
				&none 		&none 		&none		&kp LC(C)
				&none 		&none		&none 		&kp LC(X)
				&none          	&kp ESC		&none     	&none	
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		proc_layer {
			bindings = <
						&kp LS(LG(Z))	&kp E 		&kp M
				&none	 	&kp LG(Z)  	&kp B 		&kp X
				&none 		&kp L 		&kp SPACE	&kp C
				&none 		&kp LG(BSPC) 	&kp S		&kp LG(U)
				&none          	&lt SWITCH ESC	&kp V     	&kp LCMD
			>;

			sensor-bindings = <&inc_dec_kp Ö Ä>;
		};
		rhino_layer {
			bindings = <
						&kp LC(Z)	&kp LC(T)	&kp LC(N0)	
				&none	 	&kp LC(Y)  	&kp LC(M)	&kp BSPC	
				&none 		&kp LC(E)	&kp LC(LA(E))	&kp LALT	
				&none 		&kp LC(J)	&kp LC(P)	&kp LCTRL
				&none          	&lt SWITCH ESC	&kp LSHFT     	&mo RHIN
			>;

			sensor-bindings = <&inc_dec_kp LC(Z) LC(Y)>;
		};
		rhin_layer {
			bindings = <
						&kp LC(8)	&kp LC(N2)	&kp LC(D)
				&none	 	&kp LC(7) 	&kp LC(N1)	&kp LC(V)
				&none 		&kp LC(LS(G)) 	&kp F2		&kp LC(C)
				&none 		&kp LC(G) 	&kp LC(O)	&kp LC(X)
				&none          	&kp ESC		&kp LC(LS(A))   &none	
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		blender_layer {
			bindings = <
						&none		&none		&none		
				&none	 	&none		&none		&none		
				&none 		&none		&none		&none		
				&none 		&none		&none		&none		
				&none          	&lt SWITCH ESC	&none		&mo BLEN	
			>;

			sensor-bindings = <&inc_dec_kp LC(Z) LC(Y)>;
		};
		blen_layer {
			bindings = <
						&none		&none		&none		
				&none	 	&none		&none		&kp LC(V)	
				&none 		&none		&none		&kp LC(C)		
				&none 		&none		&none		&kp LC(X)		
				&none          	&kp ESC		&none		&none	
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
		switch_layer {
			bindings = <
						&none		&none	 	&none	 	
				&none	 	&none	 	&to 7	 	&none	 	
				&none 		&to 4	 	&to 5	 	&none	 	
				&none 		&to 0	 	&to 2 		&none	 	
				&none          	&lt SWITCH ESC	&none	 	&none	
			>;

			sensor-bindings = <&inc_dec_kp RBKT LBKT>;
		};
	};
};
